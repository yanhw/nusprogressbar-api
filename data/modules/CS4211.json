{
"moduleCode": "CS4211",
"moduleTitle": "Formal Methods for Software Engineering",
"moduleCredit": "4",
"lockedModules":[
],
"preclusion": "NIL",
"prerequisite": "CS2103 Software Engineering.",
"preclusionList": [],
"parsedPrerequisite": {
" and ": ["CS2103"]
},
"prerequisiteList": ["CS2103","CS1020","CS1010"],
"completePrerequisite": {
            "name": "CS4211", 
            "children": [
                {
                    "name": "CS2103", 
                    "children": [
                        {
                            "name": "CS1020", 
                            "children": [
                                {
                                    "name": "CS1010", 
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
},
"moduleDescription": "Before software can be designed, its requirements must be well understood. This in turns requires a thorough understanding of the application domain. In developing domain descriptions and requirement specifications, we need to acquire and analyse domain knowledge and system requirements, transform them into domain and requirement models, and validate these models together with domain and requirement stakeholders. Once the domain and requirement descriptions are clear, a software design can be constructed to capture software architecture and components. This course will cover the principles and techniques of these three major phases of software engineering: Domain Engineering, Requirements Engineering and Software Design.",
"crossModule": "-1",
"corequisite": "-1",
"faculty": "SCHOOL OF COMPUTING",
"department": "COMPUTER SCIENCE",
"history": [[0,0,0,0,0,],[0,0,0,0,0,],[0,0,0,0,0,],[0,0,0,0,0,],[0,0,0,0,0,],[2015,1,0,0,0,]]
}
